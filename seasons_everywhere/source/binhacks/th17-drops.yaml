binhacks:
  Enemies can drop season items:
    addr: "0x41da35"
    expected: "6888000000"
    codecave:
      - "8B4508            " # mov    eax, [ebp+0x8]  ; Float3* pos arg
      - "50                " # push   eax

      # Recover the EnemyFull.
      - "8B4DF8            " # mov    ecx, [ebp-0x8]  ; EnemyDrop* in local var
      - "8D8970C0FFFF      " # lea    ecx, [ecx-en_drop]
      - "8D89F4EDFFFF      " # lea    ecx, [ecx-efull_enemy]

      - "E8 [codecave:ExpHP.seasons-everywhere.drop-season-items]" # call

      # original code
      - "6888000000        " # push    0x88
      # abs_jmp_hack 0x41da3a
      - "E800000000        " # <1>  call %%next
      - "C704243ADA4100    " # <1>  mov dword [esp], %1
      - "C3                " # <1>  ret

  Tick season item bonus timer:
    addr: "0x420a1e"
    expected: "e8 ed4dfeff"
    codecave:
      # original code (we had to overwrite the line before the spot
      # where we want to introduce the behavior, because other paths
      # jump to the spot after)
      - "B810584000        " # mov    eax, TIMER_INCREMENT
      - "FFD0              " # call   eax

      - "8D86F4EDFFFF      " # lea    eax, [esi-efull_enemy]
      - "FFB060570000      " # push   dword [eax+efull_id]
      - "E8 [codecave:ExpHP.seasons-everywhere.find-enemy-ex-by-id]" # call
      - "8D481C            " # lea    ecx, [eax+ex_bonus_timer]

      - "83790400          " # cmp    dword [ecx+time_cur], 0x0
      - "7E0A              " # jle    .notick

      - "83EC04            " # sub    esp, 0x4 ; method is __thiscall but takes an unused stack arg
      - "B8E0DB4000        " # mov    eax, TIMER_DECREMENT
      - "FFD0              " # call   eax

      # .notick:
      # abs_jmp_hack 0x420a23
      - "E800000000        " # <1>  call %%next
      - "C70424230A4200    " # <1>  mov dword [esp], %1
      - "C3                " # <1>  ret

  Implement season ECL instructions in etEx:
    addr: "0x424b0a"
    expected: "68 dc154a00"
    codecave:
      # codecave_et_ex:
      - "81F9C1BDF0FF      " # cmp    ecx, -999999
      - "7412              " # je     .spec

      # original code
      - "68DC154A00        " # push    0x4a15dc
      # abs_jmp_hack 0x424b0f
      - "E800000000        " # <1>  call %%next
      - "C704240F4B4200    " # <1>  mov dword [esp], %1
      - "C3                " # <1>  ret

      # .spec:
      - "FFB588FBFFFF      " # push    dword [ebp-0x478]  ; instruction header
      - "89F9              " # mov     ecx, edi  ; Enemy
      - "E8 [codecave:ExpHP.seasons-everywhere.impl-et-ex-neg]"  # call
      # abs_jmp_hack 0x4265f2
      - "E800000000        " # <1>  call %%next
      - "C70424F2654200    " # <1>  mov dword [esp], %1
      - "C3                " # <1>  ret

codecaves:
  # void __thiscall EnemyFull::DropSeasonItems(Float3*)
  ExpHP.seasons-everywhere.drop-season-items:
    - "55                " # push   ebp
    - "89E5              " # mov    ebp, esp
    - "57                " # push   edi
    - "56                " # push   esi

    # For some silly reason, TH16 computes the true season item bonus in
    # multiple places (at 0x41d600 in EnemyFull::die for killed enemies, and
    # god knows where for defeated spells/nonspells), overwriting the "max"
    # value stored in the EnemyDrop. Then in EnemyDrop::drop_ex it drops
    # that overwritten value.

    # However, it's much easier to just compute the bonus right before the
    # items are generated.  (My best guess as to why TH16 doesn't do this is
    # because EnemyDrop::drop_ex only has a pointer to the EnemyDrop and not
    # to the EnemyFull).

    # Get our patch's extra data associated with this enemy.
    - "8B8160570000      " # mov     eax, [ecx+efull_id]
    - "50                " # push    eax
    - "E8 [codecave:ExpHP.seasons-everywhere.find-enemy-ex-by-id]" # call
    - "89C7              " # mov     edi, eax

    # Find out item bonus based on time.
    - "89F9              " # mov     ecx, edi
    - "E8 [codecave:ExpHP.seasons-everywhere.ex-get-season-bonus]" # call
    - "89C6              " # mov     esi, eax

    - "85F6              " # test    esi, esi
    - "7E0C              " # jle     .loopend

    # .loop:
    - "8B4508            " # mov     eax, [ebp+0x8]
    - "50                " # push    eax
    - "E8 [codecave:ExpHP.seasons-everywhere.drop-one-item]" # call
    - "4E                " # dec     esi
    - "7FF4              " # jg      .loop

    # .loopend:
    - "C7473400000000    " # mov    dword [edi+ex_item_max], 0x0
    - "C7473800000000    " # mov    dword [edi+ex_item_min], 0x0

    - "5E                " # pop    esi
    - "5F                " # pop    edi
    - "89EC              " # mov    esp, ebp
    - "5D                " # pop    ebp
    - "C20400            " # ret    0x4

  # Factored out to make relative jumps in the caller more stable.
  # DWORD __thiscall EnemyEx::GetSeasonBonus()
  ExpHP.seasons-everywhere.ex-get-season-bonus:
    - "8B4120            " # mov     eax, dword [ecx+ex_bonus_timer+time_cur]
    - "85C0              " # test    eax, eax
    - "7F04              " # jg      .positivetime

    - "8B4138            " # mov     eax, dword [ecx+ex_item_min]
    - "C3                " # ret

    # .positivetime:
    # compute  min + (max - min) * (remaining_time / max_time)
    - "8B4134            " # mov     eax, dword [ecx+ex_item_max]
    - "2B4138            " # sub     eax, dword [ecx+ex_item_min]
    - "0FAF4120          " # imul    eax, dword [ecx+ex_bonus_timer+time_cur]
    - "99                " # cdq    ; I'm not sure why the original code did this...
    - "F77930            " # idiv    dword [ecx+ex_max_time]
    - "034138            " # add     eax, dword [ecx+ex_item_min]
    - "C3                " # ret

  # Factored out to make relative jumps in the caller more stable.
  # void __stdcall DropOneItem(Float3*);
  ExpHP.seasons-everywhere.drop-one-item:
    - "55                " # push   ebp
    - "89E5              " # mov    ebp, esp

    - "83EC24            " # sub    esp, 0x24   ; 0x20 arg size + 0x4 to match offsets in function
    - "C7442420FFFFFFFF  " # mov    dword [esp+0x20], -1     ; arg 20: (unknown, new in TH17)
    - "C744241C0DF00000  " # mov    dword [esp+0x1c], 0xf00d ; arg 1c: (unused/optimized away)
    - "C744241800000000  " # mov    dword [esp+0x18], 0      ; arg 18: intangibility frames (ignored for PIV/season)

    # velocity = uniform(0.2f, 2.1f)
    - "B968764B00        " # mov    ecx, SAFE_RNG
    - "B840284000        " # mov    eax, RANDF_0_TO_1
    - "FFD0              " # call   eax

    - "C704243333F33F    " # mov    dword [esp], 0x3ff33333  ; 1.9f
    - "D80C24            " # fmul   dword [esp]
    - "D805043B4A00      " # fadd   dword [FLOAT_0_POINT_2]
    - "D95C2414          " # fstp   dword [esp+0x14]  ; arg 14: vel_norm

    - "B968764B00        " # mov    ecx, SAFE_RNG
    - "E8 [codecave:ExpHP.seasons-everywhere.randf-minus-pi-to-pi]" # call
    - "D95C2410          " # fstp   dword [esp+0x10]  ; arg 10: vel_angle

    - "C744240C0DF00000  " # mov    dword [esp+0x0c], 0xf00d ; arg  c:  (unused/optimized away)
    - "8B4D08            " # mov    ecx, dword [ebp+0x8]
    - "894C2408          " # mov    dword [esp+0x08], ecx   ; arg 8: pos
    - "C744240430000000  " # mov    dword [esp+0x04], 0x30  ; arg 4: item type

    - "83C404            " # add    esp, 0x4  ; point esp to first arg
    - "8B0DB8764B00      " # mov    ecx, [ITEM_MANAGER_PTR]
    - "B840474300        " # mov    eax, ITMMGR_SPAWN_ITEM
    - "FFD0              " # call   eax

    - "89EC              " # mov    esp, ebp
    - "5D                " # pop    ebp
    - "C20400            " # ret    0x4

  # void __thiscall Enemy::ImplSpecialEclIns(EclRawInstructionHeader*)
  ExpHP.seasons-everywhere.impl-et-ex-neg:
    - "55 89E5 56 57     " # prologue w/ esi edi
    - "89CE              " # mov    esi, ecx
    - "8B7D08            " # mov    edi, [ebp+0x8]  ; instruction header

    # # variables aren't supported (we don't need em)
    # - "8B4708            " # mov    eax, [edi+eclins_variable_mask]
    # - "85C0              " # test   eax, eax
    # - "751D              " # jnz    .error

    # The instruction is an EtEx instruction whose first arg is NEG.
    # Second arg is an opcode for us:
    - "8B4714            " # mov    eax, [edi+eclins_args+0x4] ; opcode
    - "83F801            " # cmp    eax, 0x1 ; max opcode
    - "7715              " # ja     .error

    # Calltable
    - "B9 <codecave:ExpHP.seasons-everywhere.et-ex-calltable>"  # mov    ecx, et_ex_calltable
    - "8B0481            " # mov    eax, [ecx+4*eax] ; index calltable

    # invoke method of signature
    #     void __thiscall Enemy::OpX(RawInstructionHeader*)
    - "89F1              " # mov    ecx, esi
    - "57                " # push   edi
    - "FFD0              " # call   eax

    - "5F 5E 89EC 5D     " # epilogue w/ esi edi
    - "C20400            " # ret    4
    # .error:
    - "0F0B              " # ud2

  ExpHP.seasons-everywhere.et-ex-calltable:
    - "<codecave:ExpHP.seasons-everywhere.ecl-spec-0>"  # dd ecl_spec_0
    - "<codecave:ExpHP.seasons-everywhere.ecl-spec-1>"  # dd ecl_spec_1

  # void __thiscall Enemy::Spec0(RawInstructionHeader*)
  ExpHP.seasons-everywhere.ecl-spec-0:
    - "55 89E5 56 57     " # prologue w/ esi edi
    - "89CE              " # mov    esi, ecx  ; enemy
    - "8B7D08            " # mov    edi, [ebp+0x8]  ; ins header

    # args for ex_set_season_bonus
    - "FF7720            " # push   dword [edi+eclins_args+0x10]
    - "FF771C            " # push   dword [edi+eclins_args+0x0c]
    - "FF7718            " # push   dword [edi+eclins_args+0x08]

    - "8D86F4EDFFFF      " # lea    eax, [esi-efull_enemy]
    - "FFB060570000      " # push   dword [eax+efull_id]
    - "E8 [codecave:ExpHP.seasons-everywhere.find-enemy-ex-by-id]" # call
    - "89C1              " # mov    ecx, eax
    - "E8 [codecave:ExpHP.seasons-everywhere.ex-set-season-bonus]" # call

    - "5F 5E 89EC 5D     " # epilogue w/ esi edi
    - "C20400            " # ret    4

  # void __thiscall Enemy::Spec1(RawInstructionHeader*)
  ExpHP.seasons-everywhere.ecl-spec-1:
    - "55 89E5 56 57     " # prologue w/ esi edi
    - "89CE              " # mov    esi, ecx  ; enemy
    - "8B7D08            " # mov    edi, [ebp+0x8]  ; ins header

    - "8D86F4EDFFFF      " # lea    eax, [esi-efull_enemy]
    - "FFB060570000      " # push   dword [eax+efull_id]
    - "E8 [codecave:ExpHP.seasons-everywhere.find-enemy-ex-by-id]" # call
    - "89C1              " # mov    ecx, eax

    - "8B86883F0000      " # mov    eax, [esi+en_life+elife_total_damage]
    - "894118            " # mov    [ecx+ex_damage_accounted_for], eax
    - "8B4718            " # mov    eax, [edi+eclins_args+0x08]
    - "894114            " # mov    [ecx+ex_damage_per_season_item], eax

    - "5F 5E 89EC 5D     " # epilogue w/ esi edi
    - "C20400            " # ret    4
